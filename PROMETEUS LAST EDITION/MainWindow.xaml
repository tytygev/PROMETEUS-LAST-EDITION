<Window  x:Class="PROMETEUS_LAST_EDITION.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:p="clr-namespace:PROMETEUS_LAST_EDITION.Properties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PROMETEUS_LAST_EDITION" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        mc:Ignorable="d"
        
        Title="Prometeus LE"  MinHeight="768" MinWidth="1024"  Height="768" Width="1024" SizeChanged="Window_SizeChanged" StateChanged="Window_StateChanged" Background="{x:Null}" >




    <Window.Resources>

        <!--#endregion groupbox template-->
        <!--#endregion TEXTBOX template-->
        <!--#endregion OptionMark template-->
        <!--endregion  COMBOBOX template -->
        <!--#endregion RADIOBUTTON template-->
        <!--#endregion BUTTON template-->
        <!--#endregion ScrollBar template-->
        <ZoomPercentageConverter x:Key="ZoomPercentageConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <System:String x:Key="License" xml:space="preserve">Copyright © 2017—2023 Каримов Александр и «ХТО Продакшн» ™ при участии Каримова Михаила (aka MiXeRaToS, aka Mortron)  

Если вы используете «Прометей» в своей работе, Каримов Александр был бы рад узнать об этом. Вы можете написать, направив письмо на photodc@ya.ru  И если вам доведется встретиться с Каримовым Александром в баре, можете угостить его напитком по его выбору, если «Прометей» действительно пригодилась вам.  В остальном, можете делать с этой программой всё, что вам угодно и, естественно, автор не несёт никакой ответственности:))  

В общем, если в двух словах, применяется лицензия MIT.  

Данная лицензия разрешает лицам, получившим копию данного программного обеспечения и сопутствующей документации (в дальнейшем именуемыми «Программное Обеспечение»), безвозмездно использовать Программное Обеспечение без ограничений, включая неограниченное право на использование, копирование, изменение, слияние, публикацию, распространение, сублицензирование и/или продажу копий Программного Обеспечения, а также лицам, которым предоставляется данное Программное Обеспечение, при соблюдении следующих условий:  Указанное выше уведомление об авторском праве и данные условия должны быть включены во все копии или значимые части данного Программного Обеспечения.  

ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ «КАК ЕСТЬ», БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНО ВЫРАЖЕННЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ ГАРАНТИИ ТОВАРНОЙ ПРИГОДНОСТИ, СООТВЕТСТВИЯ ПО ЕГО КОНКРЕТНОМУ НАЗНАЧЕНИЮ И ОТСУТСТВИЯ НАРУШЕНИЙ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ. НИ В КАКОМ СЛУЧАЕ АВТОРЫ ИЛИ ПРАВООБЛАДАТЕЛИ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ ПО КАКИМ-ЛИБО ИСКАМ, ЗА УЩЕРБ ИЛИ ПО ИНЫМ ТРЕБОВАНИЯМ, В ТОМ ЧИСЛЕ, ПРИ ДЕЙСТВИИ КОНТРАКТА, ДЕЛИКТЕ ИЛИ ИНОЙ СИТУАЦИИ, ВОЗНИКШИМ ИЗ-ЗА ИСПОЛЬЗОВАНИЯ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ ИЛИ ИНЫХ ДЕЙСТВИЙ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ.  

P.S. Ответ на Основной Вопрос Жизни, Вселенной и Вообще - 42. Очевидно же...</System:String>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region groupbox template-->
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="{DynamicResource ColorNuans}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="6"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                                <Border.OpacityMask>
                                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                        <Binding ElementName="Header" Path="ActualWidth"/>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Opacity="0.575">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                            </Border>
                            <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#ENDregion groupbox template-->

        <!--#region TEXTBOX template-->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Background" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Foreground" Color="{DynamicResource ColorAltFont}"/>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource TextBox.MouseOver.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBox.MouseOver.Foreground}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  Padding="5" Margin="0" VerticalAlignment="Stretch">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" IsEnabled="true" Foreground="Red" Background="Transparent" Margin="0" Padding="0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.30"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.MouseOver.Background}"/>

                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--#ENDregion TEXTBOX template-->

        <!--#region OptionMark template-->
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="{DynamicResource ColorSub}"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="Center">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Margin="1,1,1,2" Opacity="0.295" Stretch="None" >
                                        <Path.Effect>
                                            <BlurEffect x:Name="MarkBlur" RenderingBias="Performance" Radius="0" KernelType="Gaussian"/>
                                        </Path.Effect>
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ColorMain}" Offset="0.1"/>
                                                <GradientStop Color="{DynamicResource ColorAltNuans}" Offset="0.4"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="indeterminateMark" Margin="2" Opacity="0" Stroke="{x:Null}" Fill="{x:Null}"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="MycontentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <!-- <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>-->
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>

                                <!--  <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>-->

                                <Setter Property="Opacity" TargetName="optionMark" Value="0.30"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#ENDregion OptionMark template-->

        <!--#region COMBOBOX template -->
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="{DynamicResource ColorMain}" Offset="0.0"/>
            <GradientStop Color="{DynamicResource ColorMain}" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="{DynamicResource ColorSub}" Offset="0.0"/>
            <GradientStop Color="{DynamicResource ColorSub}" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="{DynamicResource ColorNuans}"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="{DynamicResource ColorMain}" Offset="0.1"/>
            <GradientStop Color="{DynamicResource ColorMain}" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="{DynamicResource ColorMain}"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="ComboBox.Orange" Color="{DynamicResource ColorAltNuans}"/>

        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>


                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>


                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>


                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="{x:Null}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">

                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                            </Border.Background>
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <ScrollViewer.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </ScrollViewer.Foreground>
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>

                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="MycontentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="green"/>

        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="{x:Null}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">

                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                            </Border.Background>
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="23*"/>
                                        <ColumnDefinition Width="51*"/>
                                    </Grid.ColumnDefinitions>
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.ColumnSpan="2"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>

                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Margin="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}" Background="Transparent">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Background="{x:Null}" BorderBrush="{x:Null}">
                        <TextBox.CaretBrush>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TextBox.CaretBrush>
                        <TextBox.SelectionBrush>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TextBox.SelectionBrush>
                    </TextBox>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{StaticResource ComboBox.Orange}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="{DynamicResource ItemsviewHover_Background}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="{DynamicResource ItemsviewHover_Border}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="{DynamicResource ItemsviewSelected_Background}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="{DynamicResource ItemsviewSelected_Border}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="{DynamicResource ItemsviewSelectedHover_Background}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="{DynamicResource ItemsviewSelectedHover_Border}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="{DynamicResource ItemsviewSelectedNoFocus_Background}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="{DynamicResource ItemsviewSelectedNoFocus_Border}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="{DynamicResource ItemsviewFocus_Border}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="{DynamicResource ItemsviewHoverFocus_Background}"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="{DynamicResource ItemsviewHoverFocus_Border}"/>
        <!--
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
        
        -->

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#ENDregion COMBOBOX template -->

        <!--#region RADIOBUTTON template-->
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="{DynamicResource ColorAltNuans}"/>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="Center">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" MinWidth="6" MinHeight="6" Opacity="0">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ColorMain}"/>
                                                <GradientStop Color="{DynamicResource ColorAltNuans}" Offset="0.45"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="MycontentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                                <!--  <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                                -->
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <!-- <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            -->
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.30"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#ENDregion RADIOBUTTON template-->

        <!--#region BUTTON template-->
        <SolidColorBrush x:Key="Button.Static.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="{DynamicResource ColorMain}"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{DynamicResource ColorNuans}"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="MycontentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="MycontentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#ENDregion BUTTON template-->

        <!--#region ScrollBar template-->
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="{DynamicResource ColorNuans}"/>

        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="{DynamicResource ColorAltNuans}"/>

        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="{DynamicResource ColorNuans}"/>

        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="{DynamicResource ColorSub}"/>

        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="MycontentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="MycontentPresenter" Value="1.0"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource ColorSub}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="{DynamicResource ColorNuans}"/>

        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">

                        <Rectangle  x:Name="rectangle" Margin="4,0" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" StrokeThickness="0" Stroke="#FFFFF300" StrokeDashArray="5,5" StrokeDashOffset="7"  />

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">

                        <Rectangle x:Name="rectangle" Margin="0,4" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">

            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Foreground="{x:Null}" Background="Green">
                                <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" Foreground="{x:Null}">
                                        <RepeatButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                                        </RepeatButton.Background>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" Foreground="{x:Null}">
                                        <RepeatButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                                        </RepeatButton.Background>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" Foreground="Yellow" Background="Orange" Margin="-2,-2,-2,-2"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        <RowDefinition Height="0.00001*"/>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    </Grid.RowDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                    <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineDownButton" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>



            </Style.Triggers>
        </Style>
        <!--#ENDregion ScrollBar template-->

        <!--#region ScrollViewer template-->
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>

                            <Border Grid.Column="0" BorderThickness="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorSub}" />
                                </Border.BorderBrush>
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="10"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#ENDregion ScrollViewer template-->

        <!--#region TabItem template-->
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="{DynamicResource ColorNuans}"/>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="{DynamicResource ColorSub}" Offset="0.0"/>
            <GradientStop Color="{DynamicResource ColorSub}" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="{DynamicResource ColorNuans}"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="{DynamicResource ColorNuans}" Offset="0.0"/>
            <GradientStop Color="{DynamicResource ColorNuans}" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="{DynamicResource ColorAltNuans}"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="{DynamicResource ColorSub}"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="{DynamicResource ColorNuans}"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource ColorFont}"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>

                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                <Setter Property="Foreground" Value="{DynamicResource ColorAltFont}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion TabItem template-->

        <!--#region menu template-->
        <SolidColorBrush x:Key="Menu.Static.Background" Color="{DynamicResource ColorMain}"/>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="{DynamicResource ItemsviewSelectedHover_Background}"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="{DynamicResource ItemsviewHoverFocus_Border}"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="{DynamicResource ItemsviewSelected_Border}"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="{DynamicResource ItemsviewSelected_Background}"/>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="{DynamicResource ColorFont}"/>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" Background="{StaticResource MenuItem.Selected.Background}" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" Grid.Column="2" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <SolidColorBrush x:Key="Menu.Static.Border" Color="{DynamicResource ColorNuans}"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="{DynamicResource ColorMain}"/>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                            <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Background="{StaticResource Menu.Static.Background}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Background="{StaticResource MenuItem.Highlight.Background}" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter Grid.Column="2" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Background="{StaticResource Menu.Static.Background}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--#endregion menu template-->


        <!--#region DataGrid template-->
        <!--<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorNuansNA}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                            </Border.Background>
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Background="{x:Null}">
                                <ScrollViewer.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </ScrollViewer.Foreground>
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#909090" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}">
                                <Thumb.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                </Thumb.Foreground>
                            </Thumb>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}">
                                <Thumb.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                </Thumb.Foreground>
                            </Thumb>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <DataGridCellsPresenter.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </DataGridCellsPresenter.Foreground>
                                </DataGridCellsPresenter>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                    <DataGridRowHeader.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </DataGridRowHeader.Foreground>
                                </DataGridRowHeader>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsNewItem" Value="True">
                    <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ColorAltNuans}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ColorAltNuans}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <DataGridRowsPresenter x:Name="PART_RowsPresenter" IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Margin="0">
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#909090" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Margin="0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" Width="Auto" Margin="0,18,0,0" FontSize="14">
                                <Thumb.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                </Thumb.Foreground>
                            </Thumb>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" Width="Auto" Margin="0,18,0,0" FontSize="14">
                                <Thumb.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                </Thumb.Foreground>
                            </Thumb>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" VerticalAlignment="Stretch">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#ff0000"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ColorNuansNA}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ColorNuansNA}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                            </Border.Background>
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Background="{x:Null}">
                                <ScrollViewer.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </ScrollViewer.Foreground>
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>-->
        <!--#endregion DataGrid template-->

    </Window.Resources>
    <Window.Foreground>
        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
    </Window.Foreground>


    <Grid x:Name="grid" Margin="0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="MainMenuCel" Width="Auto" />
            <ColumnDefinition x:Name="MainWindowCel" Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="MenuFooterCel" Height="*"/>
            <RowDefinition x:Name="MainFooterCel" Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.Background>
            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
        </Grid.Background>
        <ProgressBar x:Name="PB" Margin="10" Grid.ColumnSpan="1" Grid.Row="1" BorderThickness="1" IsTabStop="False">
            <ProgressBar.BorderBrush>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </ProgressBar.BorderBrush>
            <ProgressBar.Foreground>
                <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
            </ProgressBar.Foreground>
            <ProgressBar.Background>
                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
            </ProgressBar.Background>
        </ProgressBar>
        <TextBlock x:Name="FooterPrompt" Margin="10" TextWrapping="WrapWithOverflow" Text="Описание &#xA;Доп описание " Height="Auto" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Cursor="Help" ForceCursor="True">
            <TextBlock.Foreground>
                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
            </TextBlock.Foreground>
        </TextBlock>
        <Grid HorizontalAlignment="Center" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto "/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,15,0,0" VerticalAlignment="Top" Grid.RowSpan="3" >
                <!-- -->

                <!--
                
                Решение
Неправильный подход для WPF.
System.Drawing.Bitmap (как и вообще складирование картинок в .resx файл) - используется в Winforms.
В WPF данными для Image является объект System.Windows.Media.ImageSource и его наследники.
В WPF картинки слкадываются не в ресурсный файл, а лежат рядом с исходниками (как правило в отдельной папке).
В WPF обращение к картинкам происходит следующим образом:
<BitmapImage x:Key="MyImageSource" UriSource="../Media/Image.png" />
                В Вашем случае здесь Uri типа Pack://... 
                

                <Image Source="{StaticResource MyImageSource}" />

                -->

                <!--
                
                Решение
Неправильный подход для WPF.
System.Drawing.Bitmap (как и вообще складирование картинок в .resx файл) - используется в Winforms.
В WPF данными для Image является объект System.Windows.Media.ImageSource и его наследники.
В WPF картинки слкадываются не в ресурсный файл, а лежат рядом с исходниками (как правило в отдельной папке).
В WPF обращение к картинкам происходит следующим образом:
<BitmapImage x:Key="MyImageSource" UriSource="../Media/Image.png" />
                В Вашем случае здесь Uri типа Pack://... 
                

                <Image Source="{StaticResource MyImageSource}" />

                -->

                <local:MainMenuButton x:Name="KitSetButton"  Margin="20,0,0,0" LabelButtonProperty="Путевые листы"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp"  Padding="0,5" ImageSourceProperty="{StaticResource KitSet}" >
                    <!--Loaded="KitSetButton_Loaded"-->
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>
                <local:MainMenuButton x:Name="PriceButton" Margin="20,0,0,0" LabelButtonProperty="Наряд"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" Padding="0,5" ImageSourceProperty="{StaticResource Price}" IsEnabled="False">
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>
                <local:MainMenuButton x:Name="DBEditButton"  Margin="20,0,0,0" LabelButtonProperty="Редактор БД"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" Padding="0,5" ImageSourceProperty="{StaticResource DBedit}" >
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>
                <local:MainMenuButton x:Name="TaxiButton" Margin="20,0,0,0" LabelButtonProperty="Подсчёт такси" MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp"  Padding="0,5" ImageSourceProperty="{StaticResource Taxi}" IsEnabled="False" >
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>
                <local:MainMenuButton x:Name="SettingsButton" Margin="20,0,0,0" LabelButtonProperty="Настройки"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" Padding="0,5" ImageSourceProperty="{StaticResource Settings}" >
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>
                <local:MainMenuButton x:Name="AboutButton" Margin="20,0,0,0" LabelButtonProperty="О программе" MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp"  Padding="0,5" ImageSourceProperty="{StaticResource About}" >
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>

            </StackPanel>
            <StackPanel Margin="0" VerticalAlignment="Top" Grid.Row="1" >

                <Image HorizontalAlignment="Center" Source="{StaticResource ThemeLogo}" Margin="0,0,0,50" MaxWidth="50" VerticalAlignment="Center"/>

                <local:MainMenuButton x:Name="ExitButton" Margin="0,5" LabelButtonProperty="Выход" MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center" ImageSourceProperty="{StaticResource Exit}" >
                    <local:MainMenuButton.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </local:MainMenuButton.Background>
                </local:MainMenuButton>
                <TextBlock x:Name="FileVersionTextBlock" Margin="0,5,20,5" TextWrapping="Wrap" Text="ver.: {0.0.0.0a}" VerticalAlignment="Top" FontSize="10" HorizontalAlignment="Right">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
            </StackPanel>

            <!-- 
            <MediaElement x:Name="SoundPlayer" HorizontalAlignment="Left" Height="38" Margin="10,567,0,0" VerticalAlignment="Top" Width="40" Source="Windows Menu Command.wav" Visibility="Hidden"/>
        -->
        </Grid>

        <Grid x:Name="KitSetPage" Grid.Column="1" Margin="0" ScrollViewer.VerticalScrollBarVisibility="Auto" d:IsHidden="True">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Margin="15,0,15,15" UseLayoutRounding="False" Focusable="True" VerticalAlignment="Bottom">
                <Menu FontSize="14" BorderThickness="0,0,0,1" Padding="10,0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Top" Margin="0,5,0,0" Visibility="Collapsed">
                    <Menu.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </Menu.Foreground>
                    <Menu.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </Menu.BorderBrush>
                    <Menu.Background>
                        <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                    </Menu.Background>

                    <MenuItem Header="Файл" Padding="6,2" Background="{x:Null}" BorderBrush="{x:Null}">
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>
                        <MenuItem Header="Новый" Click="OpenDB"  Icon="{Binding ImageSourceProperty, ElementName=NewKitSetButton}"/>
                        <Separator/>
                        <MenuItem Header="Открыть..." Click="OpenDB" Icon="{Binding ImageSourceProperty, ElementName=OpenKitSetButton}"/>
                        <MenuItem Header="Последние" Click="OpenDB" >
                            <MenuItem Header="Медицина" Click="OpenDB" Width="169"/>
                            <MenuItem Header="Персонал" Click="OpenDB" Width="169"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Сохранить" Click="OpenDB" Icon="{Binding ImageSourceProperty, ElementName=SaveKitSetButton}"/>
                        <MenuItem Header="Сохранить как..." Click="OpenDB" Icon="{Binding ImageSourceProperty, ElementName=SaveasKitSetButton}"/>
                        <Separator/>
                        <MenuItem Header="Печать..." Icon="{Binding ImageSourceProperty, ElementName=PrintKitSetButton}"/>
                        <MenuItem Header="Быстрая печать" Icon="{Binding ImageSourceProperty, ElementName=PrintfKitSetButton}"/>
                        <Separator/>
                        <MenuItem Header="Закрыть"/>
                    </MenuItem>
                    <MenuItem Header="Правка" Padding="6,2" Background="{x:Null}" BorderBrush="{x:Null}">
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>
                    </MenuItem>
                    <MenuItem Header="Вид" Padding="6,2" Background="{x:Null}" BorderBrush="{x:Null}">
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>
                    </MenuItem>
                </Menu>
                <StackPanel Orientation="Horizontal" UseLayoutRounding="False" Focusable="True" Width="763" Margin="0,5,0,0" HorizontalAlignment="Left">
                    <local:SubMenuButton x:Name="NewKitSetButton" Margin="0"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center" ImageSourceProperty="{StaticResource NewKitSet}" />
                    <local:SubMenuButton x:Name="OpenKitSetButton" Margin="0"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center"  ImageSourceProperty="{StaticResource OpenKitSet}" />
                    <local:SubMenuButton x:Name="SaveKitSetButton" Margin="0"  MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center"  ImageSourceProperty="{StaticResource SaveKitSet}" />
                    <local:SubMenuButton x:Name="SaveasKitSetButton" Margin="0" MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center"  ImageSourceProperty="{StaticResource SaveAsKitSet}" />
                    <Border BorderThickness="1,0,0,1" Margin="5,3" Width="2">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Border.BorderBrush>
                    </Border>
                    <local:SubMenuButton x:Name="PrintfKitSetButton" Margin="0" MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center" ImageSourceProperty="{StaticResource PrintFKitSet}" />
                    <local:SubMenuButton x:Name="PrintKitSetButton" Margin="0" MouseEnter="MenuButton_MouseEnter" MouseLeave="MenuButton_MouseLeave" MouseUp="MenuButton_MouseUp" HorizontalAlignment="Center"  ImageSourceProperty="{StaticResource PrintKitSet}" />


                </StackPanel>
            </StackPanel>
            <GroupBox Margin="10,0,10,10" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" VerticalContentAlignment="Stretch" FontSize="16" Header="[новый]*" BorderThickness="1" Padding="0" UseLayoutRounding="False" FontWeight="Bold">
                <GroupBox.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                </GroupBox.BorderBrush>
                <GroupBox.Foreground>
                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                </GroupBox.Foreground>

                <Grid Margin="10,-5,10,-2" ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" Margin="0,5,0,0" HorizontalAlignment="Left">
                        <StackPanel Margin="0" VerticalAlignment="Top" CanVerticallyScroll="True" ScrollViewer.CanContentScroll="True" MinWidth="260">
                            <TextBlock HorizontalAlignment="Left" Margin="10,15,10,5" TextWrapping="Wrap" FontSize="14" FontWeight="Normal" TextDecorations="{x:Null}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TextBlock.Foreground><Run Text="Организация"/></TextBlock>
                            <ComboBox HorizontalAlignment="Right" Margin="10,5" Text="" MinWidth="180" FontSize="14" FontWeight="Normal" Padding="2,4,2,2" MaxWidth="250" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Выберите название организации">
                                <ComboBox.Foreground>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="{DynamicResource ColorAltFont}" Offset="0.37"/>
                                    </LinearGradientBrush>
                                </ComboBox.Foreground>
                                <ComboBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </ComboBox.BorderBrush>
                                <ComboBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </ComboBox.Background>
                            </ComboBox>
                            <CheckBox x:Name="checkBox8" Margin="10,5" FontSize="14" BorderThickness="1" Padding="5,0,0,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Width="{Binding ActualWidth, ElementName=comboBox2, Mode=OneWay}" Content="Без адреса осмотра" FontWeight="Normal" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <CheckBox x:Name="checkBox9" Margin="10,5" FontSize="14" BorderThickness="1" Padding="5,0,0,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Width="{Binding ActualWidth, ElementName=comboBox2, Mode=OneWay}" Content="Без адреса подачи" FontWeight="Normal" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <TextBlock HorizontalAlignment="Left" Margin="10,15,10,5" TextWrapping="Wrap" Text="Механик" FontSize="14" FontWeight="Normal" TextDecorations="{x:Null}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TextBlock.Foreground>
                            </TextBlock>
                            <ComboBox HorizontalAlignment="Right" Margin="10,5" Text="" MinWidth="180" FontSize="14" FontWeight="Normal" Padding="2,4,2,2" IsEditable="True" MaxWidth="250" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <ComboBox.Foreground>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="#FFFF9523" Offset="0.37"/>
                                    </LinearGradientBrush>
                                </ComboBox.Foreground>
                                <ComboBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </ComboBox.BorderBrush>
                                <ComboBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </ComboBox.Background>
                            </ComboBox>
                            <TextBlock HorizontalAlignment="Left" Margin="10,15,10,5" TextWrapping="Wrap" Text="Диспетчер-нарядчик" FontSize="14" FontWeight="Normal" TextDecorations="{x:Null}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TextBlock.Foreground>
                            </TextBlock>
                            <CheckBox x:Name="checkBox1" Content="Связать с Механик" Margin="10,5" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0"  IsChecked="True" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Width="{Binding ActualWidth, ElementName=comboBox2, Mode=OneWay}" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <ComboBox x:Name="comboBox2" HorizontalAlignment="Right" Margin="10,5" Text="" MinWidth="180" FontSize="14" FontWeight="Normal" Padding="2,4,2,2" IsEditable="True" MaxWidth="250" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <ComboBox.Foreground>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="#FFFF9523" Offset="0.37"/>
                                    </LinearGradientBrush>
                                </ComboBox.Foreground>
                                <ComboBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </ComboBox.BorderBrush>
                                <ComboBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </ComboBox.Background>
                            </ComboBox>
                            <TextBlock HorizontalAlignment="Left" Margin="10,15,10,5" TextWrapping="Wrap" Text="Медработник" FontSize="14" FontWeight="Normal" TextDecorations="{x:Null}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TextBlock.Foreground>
                            </TextBlock>
                            <ComboBox HorizontalAlignment="Right" Margin="10,5" Text="" MinWidth="180" FontSize="14" FontWeight="Normal" Padding="2,4,2,2" MaxWidth="250" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <ComboBox.Foreground>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="#FFFF9523" Offset="0.37"/>
                                    </LinearGradientBrush>
                                </ComboBox.Foreground>
                                <ComboBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </ComboBox.BorderBrush>
                                <ComboBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </ComboBox.Background>
                            </ComboBox>
                            <CheckBox x:Name="checkBox7" Content="Только Лицензия" Margin="10,5" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Width="{Binding ActualWidth, ElementName=comboBox2, Mode=OneWay}" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Печатать только номер, дату и срок действия лицензии">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <CheckBox Content="Не печатать пустые" Margin="10,15,10,5" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" IsChecked="True" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Путёвки с некорректными данными будут пропущены">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <Grid Margin="10,15,10,5" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox x:Name="checkBox2" Content="Печатать серию:" Margin="0,0,10,0" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" IsChecked="True" VerticalAlignment="Center" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                    <CheckBox.Background>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </CheckBox.Background>
                                    <CheckBox.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </CheckBox.Foreground>
                                    <CheckBox.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                    </CheckBox.BorderBrush>

                                </CheckBox>

                                <TextBox Margin="0" FontSize="14" FontWeight="Bold" Grid.Column="1" VerticalContentAlignment="Center" FontStyle="Italic" IsEnabled="{Binding IsChecked, ElementName=checkBox2}" VerticalAlignment="Top" ClipToBounds="True" MaxLength="4" MaxLines="1" UndoLimit="0" IsUndoEnabled="False" HorizontalContentAlignment="Right" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                    <TextBox.Foreground>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ColorSub}" Offset="0"/>
                                            <GradientStop Color="{DynamicResource ColorAltFont}" Offset="0.3"/>
                                        </LinearGradientBrush>
                                    </TextBox.Foreground>
                                    <TextBox.CaretBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBox.CaretBrush>
                                    <TextBox.SelectionBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBox.SelectionBrush>
                                    <TextBox.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                    </TextBox.BorderBrush>
                                    <TextBox.Background>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </TextBox.Background>
                                </TextBox>

                            </Grid>
                            <Grid Margin="10,15,10,5" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox x:Name="checkBox3" Content="Печатать номера&#xA;начиная с:" Margin="0,0,10,0" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" VerticalAlignment="Center" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                    <CheckBox.Background>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </CheckBox.Background>
                                    <CheckBox.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </CheckBox.Foreground>
                                    <CheckBox.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                    </CheckBox.BorderBrush>

                                </CheckBox>

                                <TextBox Margin="0" FontSize="14" FontWeight="Bold" HorizontalContentAlignment="Right" Grid.Column="1" VerticalContentAlignment="Center" UndoLimit="0" FontStyle="Italic" VerticalAlignment="Top" IsEnabled="{Binding IsChecked, ElementName=checkBox3}" Padding="0" MaxLines="1" MaxLength="5" IsUndoEnabled="False" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Номер должен содержать только цифры">
                                    <TextBox.Foreground>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ColorSub}" Offset="0"/>
                                            <GradientStop Color="{DynamicResource ColorAltFont}" Offset="0.3"/>
                                        </LinearGradientBrush>
                                    </TextBox.Foreground>
                                    <TextBox.CaretBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBox.CaretBrush>
                                    <TextBox.SelectionBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBox.SelectionBrush>
                                    <TextBox.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                    </TextBox.BorderBrush>
                                    <TextBox.Background>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </TextBox.Background>
                                </TextBox>

                            </Grid>
                            <CheckBox x:Name="checkBox4" Content="Печатать дату печати" Margin="10,5,10,-20" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" IsChecked="True" Panel.ZIndex="1" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <GroupBox Header="" Margin="10,15,10,5" FontSize="12" FontWeight="Normal" Padding="0" UseLayoutRounding="True" BorderThickness="1,0,1,1" VerticalAlignment="Top" IsEnabled="{Binding IsChecked, ElementName=checkBox4}">

                                <GroupBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </GroupBox.Foreground>
                                <GroupBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </GroupBox.BorderBrush>

                                <StackPanel VerticalAlignment="Top">
                                    <RadioButton Content="Текущую" Margin="10,10,10,5" FontSize="14" IsChecked="True" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <RadioButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </RadioButton.Background>
                                        <RadioButton.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </RadioButton.BorderBrush>
                                        <RadioButton.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </RadioButton.Foreground>
                                    </RadioButton>
                                    <RadioButton Content="Выбрать дату" Margin="10,5" FontSize="14" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <RadioButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </RadioButton.Background>
                                        <RadioButton.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </RadioButton.BorderBrush>
                                        <RadioButton.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </RadioButton.Foreground>
                                    </RadioButton>
                                    <CheckBox Content="Только месяц и год" Margin="10,5" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <CheckBox.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </CheckBox.Foreground>
                                        <CheckBox.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </CheckBox.BorderBrush>
                                        <CheckBox.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </CheckBox.Background>

                                    </CheckBox>
                                </StackPanel>

                            </GroupBox>
                            <CheckBox x:Name="checkBox5" Content="Печатать срок действия" Margin="10,5,10,-20" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" IsChecked="True" Panel.ZIndex="1" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>

                            </CheckBox>
                            <GroupBox Header="" Margin="10,15,10,2" FontSize="12" FontWeight="Normal" Padding="0" UseLayoutRounding="True" BorderThickness="1,0,1,1" VerticalAlignment="Top" IsEnabled="{Binding IsChecked, ElementName=checkBox5}">

                                <GroupBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </GroupBox.Foreground>
                                <GroupBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </GroupBox.BorderBrush>

                                <StackPanel VerticalAlignment="Top">
                                    <RadioButton Content="На сегодня" Margin="10,10,10,5" FontSize="14" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <RadioButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </RadioButton.Background>
                                        <RadioButton.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </RadioButton.BorderBrush>
                                        <RadioButton.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </RadioButton.Foreground>
                                    </RadioButton>
                                    <RadioButton Content="На следующий день" Margin="10,5" IsChecked="True" FontSize="14" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <RadioButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </RadioButton.Background>
                                        <RadioButton.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </RadioButton.BorderBrush>
                                        <RadioButton.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </RadioButton.Foreground>
                                    </RadioButton>
                                    <RadioButton Content="Выбрать даты" Margin="10,5" FontSize="14" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <RadioButton.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </RadioButton.Background>
                                        <RadioButton.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </RadioButton.BorderBrush>
                                        <RadioButton.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </RadioButton.Foreground>
                                    </RadioButton>
                                    <CheckBox Content="На два дня" Margin="10,5" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <CheckBox.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </CheckBox.Foreground>
                                        <CheckBox.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </CheckBox.BorderBrush>
                                        <CheckBox.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </CheckBox.Background>

                                    </CheckBox>
                                    <CheckBox Content="Только месяц и год" Margin="10,5" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                        <CheckBox.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </CheckBox.Foreground>
                                        <CheckBox.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </CheckBox.BorderBrush>
                                        <CheckBox.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </CheckBox.Background>

                                    </CheckBox>
                                </StackPanel>

                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>


                    <ScrollViewer x:Name="scrollViewer1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Visible" Margin="30,5,0,0" Grid.Column="1" UseLayoutRounding="False">
                        <Grid Grid.Column="1" Margin="0,10,0,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=scrollViewer1, Mode=OneWay}" HorizontalAlignment="Left" MaxWidth="471">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Margin="0,5,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=stackPanel2, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=stackPanel1, Mode=OneWay}"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox x:Name="checkBox" Content="9999" Margin="0" FontSize="12" FontWeight="Normal" BorderThickness="1" VerticalAlignment="Center" Padding="5,0,0,0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Visibility="Hidden">
                                    <CheckBox.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </CheckBox.Foreground>
                                    <CheckBox.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </CheckBox.BorderBrush>
                                    <CheckBox.Background>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </CheckBox.Background>
                                </CheckBox>
                                <TextBlock x:Name="textBlock1_Copy" Margin="0,0,0,1" TextWrapping="Wrap" Text="№п/п" FontSize="14" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" Width="{Binding ActualWidth, ElementName=comboBox1, Mode=OneWay}" Grid.ColumnSpan="2">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <TextBlock x:Name="textBlock" Margin="20,0,0,0" TextWrapping="Wrap" Text="Водитель" FontSize="14" FontWeight="Normal" VerticalAlignment="Center" Grid.Column="1" Padding="0" Width="{Binding ActualWidth, ElementName=comboBox, Mode=OneWay}" HorizontalAlignment="Left">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <TextBlock x:Name="textBlock1" Margin="20,0,0,0" TextWrapping="Wrap" Text="Авто" FontSize="14" FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="2" Width="{Binding ActualWidth, ElementName=comboBox1, Mode=OneWay}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                            <ScrollViewer x:Name="scrollViewer" Margin="0" Grid.Row="1" VerticalContentAlignment="Stretch" VerticalAlignment="Center" Padding="0,0,10,0">
                                <ScrollViewer.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </ScrollViewer.Foreground>
                                <ScrollViewer.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                                </ScrollViewer.BorderBrush>
                                <Grid x:Name="GridLine" Margin="0,0,10,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--<Ellipse x:Name="EllipseR" Grid.Column="4" Height="{Binding ActualHeight, ElementName=GridLine, Mode=OneWay}" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"  Margin="-15,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom"  >
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse x:Name="EllipseL" Grid.Column="0" HorizontalAlignment="Left" Margin="0,10,-17,10" Width="{Binding ActualHeight, ElementName=stackPanel2, Mode=OneWay}" VerticalAlignment="Center" Height="{Binding ActualHeight, ElementName=stackPanel2, Mode=OneWay}">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                    </Ellipse.Fill>
                                </Ellipse>-->
                                    <StackPanel x:Name="stackPanel" Grid.Column="0" Margin="0,10" VerticalAlignment="Center" >

                                        <CheckBox x:Name="checkBox6" Content="1" Margin="0" FontSize="14" FontWeight="Normal" BorderThickness="1" Padding="5,0,0,0" VerticalContentAlignment="Center" UseLayoutRounding="True" Width="{Binding ActualWidth, ElementName=checkBox, Mode=OneWay}" IsChecked="True" VerticalAlignment="Center" HorizontalAlignment="Left" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                            <CheckBox.Background>
                                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                            </CheckBox.Background>
                                            <CheckBox.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </CheckBox.Foreground>
                                            <CheckBox.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                            </CheckBox.BorderBrush>
                                        </CheckBox>

                                    </StackPanel>
                                    <StackPanel x:Name="stackPanel2" Grid.Column="1" VerticalAlignment="Center" MaxWidth="270" Grid.ColumnSpan="2" Margin="0,1">
                                        <ComboBox x:Name="comboBox" Margin="20,5,0,5" FontSize="14" MinWidth="175" VerticalAlignment="Center" Padding="6,4,5,2" IsEditable="True" FontWeight="Normal" ScrollViewer.CanContentScroll="True" MaxWidth="250" IsEnabled="{Binding IsChecked, ElementName=checkBox6}" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                            <ComboBox.Foreground>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0"/>
                                                    <GradientStop Color="{DynamicResource ColorAltFont}" Offset="0.37"/>
                                                </LinearGradientBrush>
                                            </ComboBox.Foreground>
                                            <ComboBox.Background>
                                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                            </ComboBox.Background>
                                            <ComboBox.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                                            </ComboBox.BorderBrush>
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel x:Name="stackPanel1" Grid.Column="3" VerticalAlignment="Center" Margin="0,1">
                                        <ComboBox x:Name="comboBox1" Margin="20,5,0,5" FontSize="14" MinWidth="60" VerticalAlignment="Center" Padding="6,4,5,2" IsEditable="True" FontWeight="Normal" IsEnabled="{Binding IsChecked, ElementName=checkBox6}" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                            <ComboBox.Background>
                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                    <GradientStop Color="{DynamicResource ColorMain}" Offset="0"/>
                                                    <GradientStop Color="{DynamicResource ColorMain}" Offset="1"/>
                                                </LinearGradientBrush>
                                            </ComboBox.Background>
                                            <ComboBox.Foreground>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0"/>
                                                    <GradientStop Color="{DynamicResource ColorAltFont}" Offset="0.37"/>
                                                </LinearGradientBrush>
                                            </ComboBox.Foreground>
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel x:Name="stackPanel3" Grid.Column="4" VerticalAlignment="Center" Height="{Binding ActualHeight, ElementName=stackPanel1, Mode=OneWay}" HorizontalAlignment="Left" Margin="0,1">
                                        <TextBlock Margin="20,-2,0,0" TextWrapping="Wrap" Text="O" FontFamily="Wingdings 2" FontSize="36" Padding="0"  Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Center" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                            </ScrollViewer>
                            <Button Grid.Row="2" Content="Добавить строку" Margin="0,10,10,10" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=GridLine, Mode=OneWay}" HorizontalContentAlignment="Center" FontSize="14" Padding="1,3,1,5" VerticalContentAlignment="Center" FontWeight="Normal" HorizontalAlignment="Left" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                                <Button.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                </Button.Foreground>
                                <Button.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </Button.BorderBrush>
                                <Button.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                                </Button.Background>
                            </Button>


                        </Grid>
                        <!--<StackPanel x:Name="SelectionLinePanel0" Grid.Column="1" HorizontalAlignment="Left" Margin="20,136,0,0" VerticalAlignment="Top" Orientation="Horizontal">
                        -->
                        <!--<Canvas>
                            
                            <Rectangle  x:Name="Rect" Height="{Binding ActualHeight, ElementName=qwerty, Mode=OneWay}">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                           
                        </Canvas>-->
                        <!--

                        <StackPanel x:Name="qwerty" Margin="0,5" Orientation="Horizontal" Panel.ZIndex="1" HorizontalAlignment="Center" Height="auto" VerticalAlignment="Center">
                            <StackPanel.Background>
                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                            </StackPanel.Background>
                            <CheckBox Content="S  " HorizontalAlignment="Left" Margin="0,0,10,0" FontSize="12" FontWeight="Normal" BorderThickness="1" VerticalAlignment="Center" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </CheckBox.BorderBrush>
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </CheckBox.Background>
                            </CheckBox>
                            <ComboBox Margin="10,0" VerticalAlignment="Center" FontSize="12" MinWidth="100" Width="100" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{x:Null}"/>
                            <ComboBox Margin="10,0" VerticalAlignment="Center" FontSize="12" MinWidth="100" Width="100" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}"/>
                        </StackPanel>
                    </StackPanel>-->
                    </ScrollViewer>
                </Grid>
            </GroupBox>
        </Grid>
        <Grid x:Name="PricePage" Margin="0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto" d:IsHidden="True">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
        </Grid>
        <Grid x:Name="DBEditPage" Margin="0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel x:Name="stackPanel4" Margin="15" Orientation="Horizontal" Visibility="Collapsed" d:IsHidden="True" >
                <Menu Margin="0,10,0,0" FontSize="14" BorderThickness="0,0,0,1" Padding="10,0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch" MinWidth="{Binding ActualWidth, ElementName=stackPanel4, Mode=OneWay}">
                    <Menu.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </Menu.Foreground>
                    <Menu.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </Menu.BorderBrush>
                    <Menu.Background>
                        <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                    </Menu.Background>
                    <MenuItem Header="БД" Padding="6,2">

                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>

                        <MenuItem Header="Авто" Click="OpenDB"/>
                        <MenuItem Header="Водители" Click="OpenDB"/>
                        <MenuItem Header="Компании" Click="OpenDB"/>
                        <MenuItem Header="Медицина" Click="OpenDB"/>
                        <MenuItem Header="Персонал" Click="OpenDB"/>

                    </MenuItem>

                    <MenuItem Header="Файл" Padding="6,2" Background="{x:Null}" BorderBrush="{x:Null}">
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>
                    </MenuItem>
                    <MenuItem Header="Правка" Padding="6,2" Background="{x:Null}" BorderBrush="{x:Null}">
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>
                    </MenuItem>
                    <MenuItem Header="Вид" Padding="6,2" Background="{x:Null}" BorderBrush="{x:Null}">
                        <MenuItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </MenuItem.Foreground>
                    </MenuItem>
                </Menu>
            </StackPanel>

            <Border BorderThickness="1" Margin="20,10,20,0" Grid.Row="1" Visibility="Collapsed" d:IsHidden="True">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource ColorGridHeaderNA}"/>
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                </Border.BorderBrush>




                <Grid Margin="0" ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ScrollViewer x:Name="DataGridHeaderScroll" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" Margin="0,0,0,0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <StackPanel Margin="0,0,17,0" VerticalAlignment="Top" CanVerticallyScroll="True" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">






                            <!--ТАБЛИЦА ЗАГОЛОВКА-->
                            <Grid x:Name="DBMSGridHeader" Margin="1,0">
                                <Grid.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </Grid.Background>
                            </Grid>



                        </StackPanel>
                    </ScrollViewer>
                </Grid>

            </Border>
            <Border x:Name="border" BorderThickness="1" Margin="20,0,20,20" Grid.Row="2" Visibility="Collapsed" d:IsHidden="True"  >
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                </Border.BorderBrush>

                <Grid Margin="1" ScrollViewer.HorizontalScrollBarVisibility="Auto" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ScrollViewer x:Name="DataGridScroll" ScrollChanged="ScrollChanged" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Margin="0,0,0,0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <StackPanel Margin="0" VerticalAlignment="Top" CanVerticallyScroll="True" ScrollViewer.CanContentScroll="True" HorizontalAlignment="Left">



                            <!--<local:FilePreviewControl Path="Book1.xlsx" Width="500" Height="500" />-->



                            <!--ОСНОВНАЯ ТАБЛИЦА-->
                            <Grid x:Name="DBMSGrid" Margin="0">
                                <Grid.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </Grid.Background>
                                <!--<Grid.RowDefinitions>
                                    <RowDefinition MinHeight="10"/>
                                    <RowDefinition MinHeight="10"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>-->

                            </Grid>

                        </StackPanel>
                    </ScrollViewer>
                </Grid>

            </Border>
            <ScrollViewer ScrollChanged="ScrollChanged" VerticalScrollBarVisibility="Visible" Margin="0" VerticalContentAlignment="Stretch" Grid.RowSpan="3" HorizontalContentAlignment="Stretch">
                <StackPanel HorizontalAlignment="Left">
                    <TextBlock TextWrapping="Wrap" Margin="15" HorizontalAlignment="Left"><Run Text="В новой версии программы редактирование данных происходит в стороннем приложении для работы с таблицами&#xA;&#xA;Данные хранятся в формате Таблица XML 2003"/></TextBlock>
                    <Button Content="Показать подробную информацию по работе с данными" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="15,5" Margin="15" Click="FullInfoEditRulesShow" Tag="Развернуть блок текста" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                        <Button.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Button.Background>
                        <Button.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </Button.Foreground>
                    </Button>
                    <TextBlock x:Name="FullInfoEditRulesTextBlock" TextWrapping="Wrap" Text="• Для редактирования данных подходит любое приложение для работы с таблицами, имеющее возможножность сохранения в формате Таблица XML 2003.&#xA;&#xA;• Содержимое файла предстваляет собой книгу Excel с несколькими рабочими листами.&#xA;&#xA;• При редактировании запрещается изменять имя файла, названия рабочих листов и изменять первую строку, содержащую идентефикаторы столбцов.&#xA;&#xA;• Формат ВСЕХ без исключения ячеек должен быть текстовым.&#xA;&#xA;• Для корректной работы программы Прометей также важно следить за содержанием стобца 'Код Компании', т.к. эти данные являются идентефикаторами. Этот столбец является обязательным для заполнения там, где он присутствует.&#xA;&#xA;• Ещё одним обязательным для заполнения является столбец 'id020' в рабочем личте 'cars'.&#xA;&#xA;• В рабочем листе 'drivers' важным является столбец 'id090'.&#xA;Возможные варианты значений (регистр символов не важен):&#xA; · true&#xA; · yes&#xA; · да&#xA; · false&#xA; · no&#xA; · нет&#xA;&#xA;• В случае повреждения основного файла данных программа попытается загрузить автоматическую резервную копию.&#xA;Автоматическая резервная копия обновляется каждый раз после успешной загрузки основного файла." Margin="30,0,15,15" HorizontalAlignment="Left" Visibility="Collapsed">
                        
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" Text="Настоятельно рекомендуется вручную сделать копию файла 'db.xml' перед его редактированием на тот случай, если данные будут отредактированы некорректно&#xA;&#xA;Для применения изменений после редактирования БД программу Прометей необходимо перезапустить" Margin="15" HorizontalAlignment="Left"/>
                    <Button Content="Открыть файл в Excel" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="15,5" Margin="15" Click="OpenDBinExcel" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                        <Button.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Button.Background>
                        <Button.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </Button.Foreground>
                    </Button>
                    <CheckBox Content="Не показывать это окно. Сразу открывать файл" HorizontalAlignment="Left" Margin="15,0,15,15" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                        <CheckBox.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </CheckBox.Foreground>
                    </CheckBox>
                    <TextBlock x:Name="DBInfoTextBlock" TextWrapping="Wrap" Margin="30,0,15,15" HorizontalAlignment="Left" FontSize="10" Text="{}{db.xml info}">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                        </TextBlock.Foreground></TextBlock>
                </StackPanel>
            </ScrollViewer>


            <!--<StackPanel ScrollViewer.HorizontalScrollBarVisibility="Visible" Margin="0" >-->
            <!-- <DataGrid x:Name="DBMSdataGrid" Margin="10" CanUserReorderColumns="true" CanUserResizeRows="true" MinRowHeight="10"  AutoGenerateColumns="False" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" Padding="0" EnableRowVirtualization="False" CanUserResizeColumns="true">
                    <DataGrid.RowBackground>
                        <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                    </DataGrid.RowBackground>
                    <DataGrid.VerticalGridLinesBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </DataGrid.VerticalGridLinesBrush>
                    <DataGrid.HorizontalGridLinesBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </DataGrid.HorizontalGridLinesBrush>
                    <DataGrid.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </DataGrid.Foreground>
                    <DataGrid.Background>
                        <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                    </DataGrid.Background>
                    <DataGrid.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </DataGrid.BorderBrush>
                </DataGrid>-->
            <!--</StackPanel>-->


        </Grid>
        <Grid x:Name="TaxiPage" Margin="0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto" Width="797" d:IsHidden="True">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Center" Margin="0" Grid.RowSpan="2" VerticalAlignment="Top">
                <StackPanel>
                    <TextBlock Margin="30,15" TextWrapping="Wrap" Text="Привет! &#xA; &#xA;Меня зовут Прометей.&#xA;Я с удовольствием помогу тебе тебе с подсчётом такси. Только тебе надо сначала меня обучить.&#xA;Пожалуйста, проверь список фамилий на кого не надо считать такси и списки городов для того, что бы я мог отличить командировки от обычных поездок." VerticalAlignment="Top" TextDecorations="{x:Null}" HorizontalAlignment="Right" TextAlignment="Justify" FontStyle="Italic">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                    <StackPanel Margin="0" Panel.ZIndex="-1" UseLayoutRounding="False">
                        <Label Content="Выбрать файл:" Margin="30,0,0,0">
                            <Label.Foreground>
                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                            </Label.Foreground>
                        </Label>
                        <StackPanel x:Name="droppanel" Margin="30,0,0,30" Height="{Binding ActualWidth, ElementName=droppanel, Mode=OneWay}" AllowDrop="True" Drop="Droppanel_Drop" MaxHeight="151" Orientation="Horizontal" MaxWidth="151" Width="151" HorizontalAlignment="Left">
                            <StackPanel.Background>
                                <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                            </StackPanel.Background>
                            <TextBox x:Name="dropfilelabel" TextWrapping="Wrap" SelectionBrush="White" BorderBrush="{x:Null}" UndoLimit="256" Panel.ZIndex="-1" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False" Text="Перетащите файл сюда" MaxWidth="151">
                                <TextBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TextBox.Foreground>
                            </TextBox>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <TabControl VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" TabStripPlacement="Left" Margin="30,0">
                    <TabItem Header="Идинтефикация" Margin="0" IsSelected="True" Padding="6,10">
                        <TabItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TabItem.Foreground>
                        <TabItem.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </TabItem.Background>
                        <TabItem.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </TabItem.BorderBrush>
                        <Grid>
                            <Grid.Background>
                                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                            </Grid.Background>
                            <StackPanel Margin="0,0,0,10">
                                <Label Content="Алгоритм идентефикации ячеек:" HorizontalAlignment="Left" Margin="30,0,0,10" VerticalAlignment="Top">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </Label.Foreground>
                                </Label>
                                <Grid x:Name="DSettingsTaxiGrid" Margin="20,0,0,0" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Label Content="1) ФИО" HorizontalAlignment="Left" Margin="10,5" VerticalAlignment="Center">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <Label Content="2) Город" HorizontalAlignment="Left" Margin="10,5" VerticalAlignment="Center" Grid.Row="1">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <Label Content="3) Сумма" HorizontalAlignment="Left" Margin="10,5" VerticalAlignment="Center" Grid.Row="2">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <ComboBox Margin="10,5" IsReadOnly="True" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center" MinWidth="180" SelectionChanged="TaxiComboBoxesSetSel">
                                        <ComboBoxItem Content="Пономеру столбца"/>
                                        <ComboBoxItem Content="По названию"/>
                                    </ComboBox>
                                    <ComboBox Margin="10,5" IsReadOnly="True" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center" MinWidth="180" SelectionChanged="TaxiComboBoxesSetSel">
                                        <ComboBoxItem Content="Пономеру столбца"/>
                                        <ComboBoxItem Content="По названию"/>
                                    </ComboBox>
                                    <ComboBox Margin="10,5" IsReadOnly="True" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center" MinWidth="180" SelectionChanged="TaxiComboBoxesSetSel">
                                        <ComboBoxItem Content="Пономеру столбца"/>
                                        <ComboBoxItem Content="По названию"/>
                                    </ComboBox>
                                    <TextBox Margin="10,5" TextWrapping="Wrap" Grid.Column="2" Padding="10,5" VerticalContentAlignment="Center" HorizontalAlignment="Left" MinWidth="180" TextChanged="TaxiTextBoxesSetVal"  >
                                        <TextBox.SelectionBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </TextBox.SelectionBrush>
                                    </TextBox>
                                    <TextBox Margin="10,5" TextWrapping="Wrap" Grid.Column="2" Padding="10,5" VerticalContentAlignment="Center" Grid.Row="1" HorizontalAlignment="Left" MinWidth="180" TextChanged="TaxiTextBoxesSetVal">
                                        <TextBox.SelectionBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </TextBox.SelectionBrush>
                                    </TextBox>
                                    <TextBox Margin="10,5" TextWrapping="Wrap" Grid.Column="2" Padding="10,5" VerticalContentAlignment="Center" Grid.Row="2" HorizontalAlignment="Left" MinWidth="180" TextChanged="TaxiTextBoxesSetVal">
                                        <TextBox.SelectionBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </TextBox.SelectionBrush>
                                    </TextBox>
                                    <Label Content="4) Телефон" HorizontalAlignment="Left" Margin="10,5" VerticalAlignment="Center" Grid.Row="3">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <ComboBox Margin="10,5" IsReadOnly="True" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center" MinWidth="180" SelectionChanged="TaxiComboBoxesSetSel">
                                        <ComboBoxItem Content="Пономеру столбца"/>
                                        <ComboBoxItem Content="По названию"/>
                                    </ComboBox>
                                    <TextBox Margin="10,5" TextWrapping="Wrap" Grid.Column="2" Padding="10,5" VerticalContentAlignment="Center" Grid.Row="3" HorizontalAlignment="Left" MinWidth="180" TextChanged="TaxiTextBoxesSetVal">
                                        <TextBox.SelectionBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </TextBox.SelectionBrush>
                                    </TextBox>
                                    <Label Content="5) Подача" HorizontalAlignment="Left" Margin="10,5" VerticalAlignment="Center" Grid.Row="4">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <ComboBox Margin="10,5" IsReadOnly="True" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center" MinWidth="180" SelectionChanged="TaxiComboBoxesSetSel">
                                        <ComboBoxItem Content="Пономеру столбца"/>
                                        <ComboBoxItem Content="По названию"/>
                                    </ComboBox>
                                    <TextBox Margin="10,5" TextWrapping="Wrap" Grid.Column="2" Padding="10,5" VerticalContentAlignment="Center" Grid.Row="4" HorizontalAlignment="Left" MinWidth="180" TextChanged="TaxiTextBoxesSetVal">
                                        <TextBox.SelectionBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </TextBox.SelectionBrush>
                                    </TextBox>
                                    <Label Content="6) Период" HorizontalAlignment="Left" Margin="10,5" VerticalAlignment="Center" Grid.Row="5">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <ComboBox Margin="10,5" IsReadOnly="True" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left" VerticalContentAlignment="Center" MinWidth="180" SelectionChanged="TaxiComboBoxesSetSel">
                                        <ComboBoxItem Content="Пономеру столбца"/>
                                        <ComboBoxItem Content="По названию"/>
                                    </ComboBox>
                                    <TextBox Margin="10,5" TextWrapping="Wrap" Grid.Column="2" Padding="10,5" VerticalContentAlignment="Center" Grid.Row="5" HorizontalAlignment="Left" MinWidth="180" TextChanged="TaxiTextBoxesSetVal">
                                        <TextBox.SelectionBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </TextBox.SelectionBrush>
                                    </TextBox>

                                </Grid>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Города" Margin="0" Padding="6,10">
                        <TabItem.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </TabItem.Background>
                        <TabItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TabItem.Foreground>
                        <Grid>
                            <Grid.Background>
                                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                            </Grid.Background>
                            <StackPanel ClipToBounds="True" Margin="0,0,0,10">
                                <Label Content="Списки городов:" HorizontalAlignment="Left" Margin="30,0,-48,10" VerticalAlignment="Top" Padding="5">
                                    <Label.Foreground>
                                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                    </Label.Foreground>
                                </Label>
                                <StackPanel Orientation="Horizontal" Margin="0">
                                    <StackPanel Margin="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Label Content="Считать:" HorizontalAlignment="Left" Margin="30,0,30,10" VerticalAlignment="Top">
                                            <Label.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </Label.Foreground>
                                        </Label>
                                        <ListBox Height="100" Margin="30,0,10,0" MinWidth="140" MinHeight="200">
                                            <ListBox.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </ListBox.Foreground>
                                            <ListBox.Background>
                                                <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                                            </ListBox.Background>
                                            <ListBox.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                            </ListBox.BorderBrush>
                                            <ListBoxItem Content="Москва"/>
                                            <ListBoxItem Content="Люберцы"/>
                                            <ListBoxItem Content="Одинцово"/>
                                        </ListBox>

                                    </StackPanel>
                                    <StackPanel VerticalAlignment="Center">
                                        <Button Content="→" FontSize="20" Margin="0,30,0,5">
                                            <Button.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                                            </Button.Foreground>
                                        </Button>
                                        <Button Content="←" FontSize="20" Margin="0,5,0,0">
                                            <Button.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                                            </Button.Foreground>
                                        </Button>
                                    </StackPanel>
                                    <StackPanel Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                        <Label Content="Не считать:" HorizontalAlignment="Left" Margin="30,0,30,10" VerticalAlignment="Top">
                                            <Label.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </Label.Foreground>
                                        </Label>
                                        <ListBox Height="100" Margin="10,0,30,0" MinHeight="200" MinWidth="140">
                                            <ListBox.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </ListBox.Foreground>
                                            <ListBox.Background>
                                                <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                                            </ListBox.Background>
                                            <ListBox.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                            </ListBox.BorderBrush>
                                            <ListBoxItem Content="Санкт-Петербург"/>
                                            <ListBoxItem Content="Геленджик"/>
                                            <ListBoxItem Content="Владивосток"/>
                                        </ListBox>

                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Персоналии" Margin="0" Padding="6,10">
                        <TabItem.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </TabItem.Background>
                        <TabItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TabItem.Foreground>
                        <Grid>
                            <Grid.Background>
                                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <StackPanel>
                                    <Label Content="Список персоналий:" Margin="30,0,0,10" Padding="5">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <StackPanel Orientation="Horizontal" Margin="0">
                                        <StackPanel Margin="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Label Content="Считать:" HorizontalAlignment="Left" Margin="30,0,30,10" VerticalAlignment="Top">
                                                <Label.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                </Label.Foreground>
                                            </Label>
                                            <ListBox Margin="30,0,10,0" MinHeight="200" MinWidth="140">
                                                <ListBox.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                </ListBox.Foreground>
                                                <ListBox.Background>
                                                    <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                                                </ListBox.Background>
                                                <ListBox.BorderBrush>
                                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                                </ListBox.BorderBrush>
                                            </ListBox>

                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center">
                                            <Button Content="→" FontSize="20" Margin="0,30,0,5">
                                                <Button.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                                                </Button.Foreground>
                                            </Button>
                                            <Button Content="←" FontSize="20" Margin="0,5,0,0">
                                                <Button.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                                                </Button.Foreground>
                                            </Button>
                                        </StackPanel>
                                        <StackPanel Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                            <Label Content="Не считать:" HorizontalAlignment="Left" Margin="30,0,30,10" VerticalAlignment="Top">
                                                <Label.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                </Label.Foreground>
                                            </Label>
                                            <ListBox Height="100" Margin="10,0" MinWidth="140" MinHeight="200">
                                                <ListBox.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                </ListBox.Foreground>
                                                <ListBox.Background>
                                                    <SolidColorBrush Color="{DynamicResource ColorGridWS}"/>
                                                </ListBox.Background>
                                                <ListBox.BorderBrush>
                                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                                </ListBox.BorderBrush>
                                            </ListBox>

                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Подсчёт" Margin="0" Padding="6,10">
                        <TabItem.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </TabItem.Background>
                        <TabItem.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TabItem.Foreground>
                        <Grid>
                            <Grid.Background>
                                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
                            </Grid.Background>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <StackPanel Margin="0,15,0,1">
                                    <Label Content="Интервалы:" HorizontalAlignment="Left" Margin="30,0,0,10" VerticalAlignment="Top">
                                        <Label.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </Label.Foreground>
                                    </Label>
                                    <Grid Margin="30,0,0,0" Width="423" HorizontalAlignment="Left">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <RadioButton Margin="5" MinWidth="55" HorizontalAlignment="Left" VerticalContentAlignment="Bottom" Content="День: с 7 до 22" VerticalAlignment="Bottom">
                                            <RadioButton.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </RadioButton.Foreground>
                                        </RadioButton>
                                        <RadioButton Content="Ночь: с 22 до 7" MinWidth="55" HorizontalAlignment="Left" VerticalContentAlignment="Bottom" Margin="5" Grid.Row="1" VerticalAlignment="Bottom">
                                            <RadioButton.Foreground>
                                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                            </RadioButton.Foreground>
                                        </RadioButton>
                                    </Grid>
                                    <Button x:Name="runchecksummButton" Content="Считать!" Height="30" Width="105" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </TabItem>
                </TabControl>
            </StackPanel>

        </Grid>
        <Grid x:Name="SettingsPage" Margin="0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto" d:IsHidden="True">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TabControl x:Name="TabControlSettings" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="30" >
                <TabItem Header="Общие"  Padding="10" IsSelected="True" FontSize="14">
                    <TabItem.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TabItem.Foreground>
                    <TabItem.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </TabItem.Background>
                    <TabItem.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </TabItem.BorderBrush>
                    <StackPanel Margin="15">
                        <ComboBox x:Name="ThemeComboBox" Margin="15" HorizontalAlignment="Left" SelectedIndex="1" Initialized="SettingsInitialized" SelectionChanged="CheckChange" ToolTip="Выбор темы оформления. Для принятия изменений необходимо перезапустить программу." MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Тема изменится после перезагрузки программы">
                            <ComboBoxItem Content="Тёмная РЕН ТВ" IsSelected="True"/>
                            <ComboBoxItem Content="Светлая МИЦ ИЗВЕСТИЯ"/>
                            <ComboBoxItem Content="Светлая Пятый Канал"/>
                        </ComboBox>
                        <CheckBox x:Name="SaveWinSizeCheckBox" Content="Сохранять размеры окна при выходе" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="True" VerticalContentAlignment="Center" Margin="15" Initialized="SettingsInitialized" Checked="CheckChange" Unchecked="CheckChange" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                            <CheckBox.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                            </CheckBox.BorderBrush>
                            <CheckBox.Background>
                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                            </CheckBox.Background>
                            <CheckBox.Foreground>
                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                            </CheckBox.Foreground>
                        </CheckBox>
                        <CheckBox x:Name="NoShowStartPageCheckBox2" Margin="15" VerticalContentAlignment="Center" Padding="5,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Disabled" Content="Не показывать окно приветствия" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding IsChecked, ElementName=NoShowStartPageCheckBox, Mode=TwoWay}" Checked="NoShowStartPageCheckBox2_CheckedUnChecked" Unchecked="NoShowStartPageCheckBox2_CheckedUnChecked" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                            <CheckBox.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                            </CheckBox.BorderBrush>
                            <CheckBox.Background>
                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                            </CheckBox.Background>
                            <CheckBox.Foreground>
                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                            </CheckBox.Foreground>
                        </CheckBox>
                        <Button Content="По умолчанию" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" Click="Button_ClickUserDef" Margin="15" Padding="15,5" ToolTip="Сброс настроек. Для принятия изменений необходимо перезапустить программу." MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Сбросить настройки">
                            <Button.Foreground>
                                <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                            </Button.Foreground>
                            <Button.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                            </Button.BorderBrush>
                            <Button.Background>
                                <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                            </Button.Background>
                        </Button>
                        <StackPanel Margin="15" Orientation="Horizontal"/>

                    </StackPanel>
                </TabItem>
                <TabItem Header="Путевые листы"  Padding="10" FontSize="14">
                    <TabItem.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </TabItem.Background>
                    <TabItem.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TabItem.Foreground>

                </TabItem>
                <TabItem Header="Наряды"  Padding="10" FontSize="14">
                    <TabItem.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </TabItem.Background>
                    <TabItem.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TabItem.Foreground>

                </TabItem>
                <TabItem Header="Базы данных"  Padding="10" FontSize="14">
                    <TabItem.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </TabItem.Background>
                    <TabItem.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TabItem.Foreground>
                    <StackPanel  Margin="15" AllowDrop="True" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </TabItem>
                <TabItem Header="Такси"  Padding="10" FontSize="14">
                    <TabItem.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </TabItem.Background>
                    <TabItem.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TabItem.Foreground>

                </TabItem>
                <TabItem Header="Global" Padding="10" IsSelected="True" FontSize="14" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Не изменяйте настройки, если не знаете точно зачем это нужно">
                    <TabItem.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                    </TabItem.Foreground>
                    <TabItem.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </TabItem.Background>
                    <TabItem.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </TabItem.BorderBrush>
                    <StackPanel Margin="15">
                        <StackPanel Margin="15">


                            <Label Content="Внимание! Эти настройки затронут всех пользователей программы!" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" FontSize="16">
                                <Label.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                </Label.Foreground>
                            </Label>
                            <Label Content="Продолжайте, только если знаете, что делаете" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top">
                                <Label.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </Label.Foreground>
                            </Label>
                        </StackPanel>

                        <TabControl>
                            <TabItem Header="Общие">
                                <TabItem.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TabItem.Foreground>
                                <TabItem.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </TabItem.Background>
                                <TabItem.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </TabItem.BorderBrush>
                                <StackPanel Margin="0">
                                    <Button Content="Очистить параметр UserSettings" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15" FontSize="14" Click="ResetUserSettingsProp" Padding="15,5">
                                        <Button.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                        </Button.Foreground>
                                        <Button.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </Button.BorderBrush>
                                        <Button.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </Button.Background>
                                    </Button>
                                    <Button Content="Reset Global Properties" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14" Click="ResetGlobalProperties" Padding="15,5" Margin="15,13,15,15">
                                        <Button.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                                        </Button.Foreground>
                                        <Button.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </Button.BorderBrush>
                                        <Button.Background>
                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                        </Button.Background>
                                    </Button>
                                </StackPanel>
                            </TabItem>
                            <TabItem Header="Базы данных">
                                <TabItem.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                </TabItem.Foreground>
                                <TabItem.Background>
                                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                </TabItem.Background>
                                <TabItem.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                </TabItem.BorderBrush>
                                <StackPanel HorizontalAlignment="Left" Margin="0,15" Orientation="Horizontal" VerticalAlignment="Top">
                                    <GroupBox Margin="15,0,0,15" Header="Cимвол-разделитель:" Padding="0" BorderThickness="1,0,1,1">
                                        <GroupBox.Foreground>
                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                        </GroupBox.Foreground>
                                        <GroupBox.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                        </GroupBox.BorderBrush>
                                        <StackPanel >
                                            <RadioButton x:Name="DefDelRadioButton" HorizontalAlignment="Left" Margin="5,10,5,5" Content="По умолчанию: | (вертикальная черта)" Padding="5,1,0,0" IsChecked="True" VerticalAlignment="Top" VerticalContentAlignment="Center">
                                                <RadioButton.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                </RadioButton.Foreground>
                                            </RadioButton>
                                            <RadioButton x:Name="CustomDelRadioButton" VerticalAlignment="Top" Padding="5,1,0,0" Margin="5,10,5,5" IsChecked="True" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch">
                                                <RadioButton.Foreground>
                                                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                </RadioButton.Foreground>
                                                <StackPanel Margin="0" Orientation="Horizontal">
                                                    <Label Content="Свой:" Margin="0,0,5,0" Padding="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Left" Background="{x:Null}">
                                                        <Label.Foreground>
                                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                        </Label.Foreground>
                                                    </Label>

                                                    <TextBox x:Name="SeparatorTextBox" TextWrapping="Wrap" FontWeight="Bold" Padding="2,2,4,5" UndoLimit="0" SpellCheck.IsEnabled="True" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" Margin="0" MaxLines="1" MaxLength="5" IsUndoEnabled="True" MinWidth="60" IsEnabled="{Binding IsChecked, ElementName=CustomDelRadioButton}">
                                                        <TextBox.Foreground>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="{DynamicResource ColorSub}" Offset="0"/>
                                                                <GradientStop Color="{DynamicResource ColorAltFont}" Offset="0.3"/>
                                                            </LinearGradientBrush>
                                                        </TextBox.Foreground>
                                                        <TextBox.CaretBrush>
                                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                        </TextBox.CaretBrush>
                                                        <TextBox.SelectionBrush>
                                                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                                                        </TextBox.SelectionBrush>
                                                        <TextBox.BorderBrush>
                                                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                                                        </TextBox.BorderBrush>
                                                        <TextBox.Background>
                                                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                                                        </TextBox.Background>
                                                    </TextBox>
                                                </StackPanel>
                                            </RadioButton>
                                        </StackPanel>
                                    </GroupBox>
                                </StackPanel>
                            </TabItem>
                        </TabControl>



                    </StackPanel>
                </TabItem>
            </TabControl>


        </Grid>
        <Grid x:Name="AboutPage" Margin="0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto" d:IsHidden="True">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Margin="10,20,10,10">
                <TextBlock TextWrapping="Wrap" Text="PROMETEUS" Margin="60,10,0,10" FontSize="36" FontFamily="Trebuchet MS" Panel.ZIndex="99" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.5"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform>
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock TextWrapping="Wrap" Text="LE" Margin="227,-85,0,0" FontSize="72" FontFamily="Brush Script MT" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                    </TextBlock.Foreground>
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-25.786"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <TextBlock Margin="15,10,10,10" TextWrapping="WrapWithOverflow" Text="Система печати путевых листов &quot;Прометей Ласт Едишн&quot;" Height="Auto" VerticalAlignment="Center">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <StackPanel Margin="0" Orientation="Horizontal">
                    <TextBlock x:Name="ProductVersionTextBlock" Margin="15,10" TextWrapping="WrapWithOverflow" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Left" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </TextBlock.Foreground><Run Text="Версия &lt;version&gt;"/></TextBlock>
                    <Button Content="Показать полную информацию о версии" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="15,5" Margin="15,0" Click="FullInfoVersionShow" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave" Tag="Развернуть блок текста">
                        <Button.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Button.Background>
                        <Button.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </Button.Foreground>
                    </Button>
                </StackPanel>
                <TextBlock x:Name="FullInfoVersionTextBlock" TextWrapping="Wrap" Text="TextBlock" Margin="15" VerticalAlignment="Center" FontSize="10" Visibility="Collapsed">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock Margin="15,10,10,10" TextWrapping="WrapWithOverflow" Text="Защищена открытой лицензией. Распространяется свободно.&#xA;По вопросам работы программы писать на почту автору: a.karimov@iz.ru" Height="Auto" VerticalAlignment="Center" UseLayoutRounding="False">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock Margin="15,10,10,10" TextWrapping="WrapWithOverflow" Text="Продолжая использовать программу, вы принимаете условия лицензии:" Height="Auto" VerticalAlignment="Center" UseLayoutRounding="False" FontSize="14">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
            </StackPanel>
            <TextBox Margin="25,0,25,25" Grid.Row="1" HorizontalContentAlignment="Stretch" Padding="5" FontSize="18" FontFamily="Courier New" VerticalScrollBarVisibility="Auto" UseLayoutRounding="False" HorizontalScrollBarVisibility="Visible" TextWrapping="Wrap" AllowDrop="False" VerticalContentAlignment="Stretch" IsUndoEnabled="True" IsTabStop="False" SnapsToDevicePixels="True" OverridesDefaultStyle="False" Focusable="False" Text="{Binding Mode=OneWay, Source={StaticResource License}}">
                <TextBox.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                </TextBox.BorderBrush>
                <TextBox.CaretBrush>
                    <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                </TextBox.CaretBrush>
                <TextBox.Foreground>
                    <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                </TextBox.Foreground>
                <TextBox.SelectionBrush>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </TextBox.SelectionBrush>
                <TextBox.Background>
                    <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                </TextBox.Background>
            </TextBox>
        </Grid>
        <Grid x:Name="StartPage" Margin="0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Auto" d:IsHidden="True">
            <Grid.Background>
                <SolidColorBrush Color="{DynamicResource ColorSub}"/>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="2" Margin="-48,130,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="145" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="54.124"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="2" Margin="-18,260,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="80" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-17.177"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="1" Margin="-23,79,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="16" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="69.659"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="1" Margin="-20,77,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="16" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="41.526"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="1" Margin="-23,280,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="16" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-2.956"/>
                        <TranslateTransform X="5.105" Y="-7.795"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <Ellipse Fill="{x:Null}" HorizontalAlignment="Left" Height="1" Margin="-20,278,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Width="16" RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-31.089"/>
                        <TranslateTransform X="1.093" Y="-9.255"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource ColorAltNuans}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <StackPanel Margin="0,0,15,15" HorizontalAlignment="Right" VerticalAlignment="Bottom" ScrollViewer.VerticalScrollBarVisibility="Disabled" Grid.Row="1">
                <TextBlock TextWrapping="Wrap" Text="PROMETEUS" Margin="60,10,0,10" FontSize="36" FontFamily="Trebuchet MS" Panel.ZIndex="99" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.5"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform>
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock TextWrapping="Wrap" Text="LE" Margin="227,-85,0,0" FontSize="72" FontFamily="Brush Script MT" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorAltFont}"/>
                    </TextBlock.Foreground>
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-25.786"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </StackPanel>
            <StackPanel Margin="15" Grid.RowSpan="2" HorizontalAlignment="Left">
                <TextBlock Margin="15" TextWrapping="Wrap" Text="Добро пожаловать в программу «Прометей»!" FontSize="24">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock x:Name="textBlock2" Margin="15" TextWrapping="Wrap" FontSize="18" Text="«Прометей» - это программа подготовки и печати путевых листов. В версии LE появится новый функционал: подготовка и печать нарядов и подсчёт количества такси " TextAlignment="Justify" MaxWidth="742" LineHeight="24" Cursor="Hand">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground></TextBlock>
                <TextBlock x:Name="textBlock3" Margin="60,15" TextWrapping="Wrap" FontSize="18" Text="Работа с путевыми листами теперь на отдельной странице" TextAlignment="Justify" MaxWidth="742" LineHeight="24" Cursor="Hand">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground></TextBlock>
                <TextBlock x:Name="textBlock3_Copy" Margin="60,15" TextWrapping="Wrap" FontSize="18" Text="Загляните в настройки - там может быть что-то интересное ;)" TextAlignment="Justify" MaxWidth="742" LineHeight="24" Cursor="Hand">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </TextBlock.Foreground></TextBlock>
                <CheckBox x:Name="NoShowStartPageCheckBox" Margin="15" VerticalContentAlignment="Center" Padding="5,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Disabled" Content="Больше не показывать" FontSize="14" Initialized="SettingsInitialized" Checked="CheckChange" Unchecked="CheckChange" MouseEnter="Object_MouseEnter" MouseLeave="Object_MouseLeave">
                    <CheckBox.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                    </CheckBox.BorderBrush>
                    <CheckBox.Background>
                        <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                    </CheckBox.Background>
                    <CheckBox.Foreground>
                        <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                    </CheckBox.Foreground>
                </CheckBox>
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
                    <Button Content="Понятно" HorizontalAlignment="Left" Height="24" VerticalAlignment="Top" Width="142" Margin="15" FontSize="14" Click="Button_ClickCloseStart">
                        <Button.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </Button.Foreground>
                        <Button.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Button.Background>
                    </Button>
                    <Button Content="Понятно, закрыть окно" HorizontalAlignment="Left" Height="24" VerticalAlignment="Top" Width="207" Margin="15" FontSize="14" Click="Button_ClickCloseStart">
                        <Button.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </Button.Foreground>
                        <Button.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Button.Background>
                    </Button>
                    <Button Content="Нихуя не понятно, но очень интересно" HorizontalAlignment="Left" Height="24" VerticalAlignment="Top" Width="327" Margin="15" FontSize="14" Click="Button_ClickCloseStart">
                        <Button.Foreground>
                            <SolidColorBrush Color="{DynamicResource ColorFont}"/>
                        </Button.Foreground>
                        <Button.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource ColorNuans}"/>
                        </Button.BorderBrush>
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource ColorMain}"/>
                        </Button.Background>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>


</Window>
